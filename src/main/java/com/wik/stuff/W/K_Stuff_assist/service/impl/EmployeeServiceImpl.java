package com.wik.stuff.W.K_Stuff_assist.service.impl;

import com.wik.stuff.W.K_Stuff_assist.models.Employee;
import com.wik.stuff.W.K_Stuff_assist.models.Position;
import com.wik.stuff.W.K_Stuff_assist.models.UserState;
import com.wik.stuff.W.K_Stuff_assist.repository.EmployeeRepository;
import com.wik.stuff.W.K_Stuff_assist.service.EmployeeService;
import org.springframework.cache.annotation.CacheEvict;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.stereotype.Service;

import java.util.HashMap;
import java.util.Map;

@Service
public class EmployeeServiceImpl implements EmployeeService {
    private final EmployeeRepository employeeRepository;
    private final Map<Long, UserState> userStates = new HashMap<>();

    public EmployeeServiceImpl(EmployeeRepository employeeRepository) {
        this.employeeRepository = employeeRepository;
    }

    @Override
    public void saveEmployee(Employee employee) {
        employeeRepository.save(employee);
    }

    @Override
    @Cacheable(value = "employeeStateCache", key = "#chatId")
    public Employee getEmployeeState(long chatId) {
        return employeeRepository.findById(chatId).orElseGet(() -> {
            Employee employee = new Employee();
            employee.setId(chatId);
            return employee;
        });
    }

    @Override
    @Cacheable(value = "userStateCache", key = "#chatId")
    public UserState getUserState(long chatId) {
        return userStates.getOrDefault(chatId, UserState.NEW);
    }

    @Override
    @CacheEvict(value = "userStateCache", key = "#chatId")
    public void updateUserState(long chatId, UserState state) {
        userStates.put(chatId, state);
    }

    @Override
    public boolean existsManager() {
        return employeeRepository.existsByPosition(Position.MANAGER);
    }
}























































































































































































































































































































































































































































































































































































































































































































































































































